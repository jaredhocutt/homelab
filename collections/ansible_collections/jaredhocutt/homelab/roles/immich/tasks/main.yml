---
# tasks file for jaredhocutt.homelab.immich

- name: Pull container images
  containers.podman.podman_image:
    name: "{{ item.image }}:{{ item.image_tag }}"
    state: present
  become: true
  loop:
    - image: "{{ immich_image }}"
      image_tag: "{{ immich_image_tag }}"
    - image: "{{ immich_machine_learning_image }}"
      image_tag: "{{ immich_machine_learning_image_tag }}"
    - image: "{{ immich_postgres_image }}"
      image_tag: "{{ immich_postgres_image_tag }}"
    - image: "{{ immich_redis_image }}"
      image_tag: "{{ immich_redis_image_tag }}"

- name: Create network
  containers.podman.podman_network:
    name: "{{ immich_name }}"
    driver: bridge
    disable_dns: false
    quadlet_file_mode: "0600"
    state: quadlet
  become: true

- name: Create volumes
  containers.podman.podman_volume:
    name: "{{ item.name }}"
    quadlet_options: "{{ item.options | default(omit) }}"
    quadlet_file_mode: "0600"
    state: quadlet
  become: true
  loop:
    - name: "{{ immich_volume_data }}"
      options: "{{ immich_volume_data_options | default(omit) }}"
    - name: "{{ immich_machine_learning_volume_cache }}"
      options: "{{ immich_machine_learning_volume_cache_options | default(omit) }}"
    - name: "{{ immich_postgres_volume_data }}"
      options: "{{ immich_postgres_volume_data_options | default(omit) }}"
    - name: "{{ immich_redis_volume_data }}"
      options: "{{ immich_redis_volume_data_options | default(omit) }}"

- name: Create postgres container
  containers.podman.podman_container:
    name: "{{ immich_name }}-postgres"
    image: "{{ immich_postgres_image }}:{{ immich_postgres_image_tag }}"
    network: "{{ immich_name }}.network"
    env: "{{ immich_postgres_env_vars_base | combine(immich_postgres_env_vars, recursive=True) }}"
    volumes:
      - "{{ immich_postgres_volume_data }}.volume:/var/lib/postgresql/data"
    shm_size: 128mb
    healthcheck_interval: 30s
    healthcheck_retries: 5
    healthcheck_start_period: 20s
    healthcheck_timeout: 5s
    healthcheck: CMD-SHELL pg_isready -d {{ immich_postgres_db_name }} -U {{ immich_postgres_user }}
    quadlet_file_mode: "0600"
    quadlet_options: "{{ immich_postgres_quadlet_options_base + immich_postgres_quadlet_options }}"
    state: quadlet
  notify: Restart postgres for {{ immich_name }}
  become: true

- name: Create redis container
  containers.podman.podman_container:
    name: "{{ immich_name }}-redis"
    image: "{{ immich_redis_image }}:{{ immich_redis_image_tag }}"
    network: "{{ immich_name }}.network"
    env: "{{ immich_redis_env_vars_base | combine(immich_redis_env_vars, recursive=True) }}"
    volumes:
      - "{{ immich_redis_volume_data }}.volume:/data"
    healthcheck_interval: 30s
    healthcheck_retries: 5
    healthcheck_start_period: 20s
    healthcheck_timeout: 3s
    healthcheck: CMD-SHELL redis-cli ping | grep PONG
    quadlet_file_mode: "0600"
    quadlet_options: "{{ immich_redis_quadlet_options_base + immich_redis_quadlet_options }}"
    state: quadlet
  notify: Restart redis for {{ immich_name }}
  become: true

- name: Create machine_learning container
  containers.podman.podman_container:
    name: "{{ immich_name }}-machine-learning"
    image: "{{ immich_image }}:{{ immich_image_tag }}"
    network: "{{ immich_name }}.network"
    env: "{{ immich_env_vars_base | combine(immich_env_vars, recursive=True) }}"
    volumes:
      - "{{ immich_machine_learning_volume_cache }}.volume:/cache"
    quadlet_file_mode: "0600"
    quadlet_options: "{{ immich_quadlet_options_base + immich_quadlet_options }}"
    state: quadlet
  notify: Restart machine_learning for {{ immich_name }}
  become: true

- name: Create container
  containers.podman.podman_container:
    name: "{{ immich_name }}"
    image: "{{ immich_image }}:{{ immich_image_tag }}"
    network: "{{ immich_name }}.network"
    env: "{{ immich_env_vars_base | combine(immich_env_vars, recursive=True) }}"
    volumes:
      - "{{ immich_volume_data }}.volume:/data"
      - /etc/localtime:/etc/localtime:ro
    quadlet_file_mode: "0600"
    quadlet_options: "{{ immich_quadlet_options_base + immich_quadlet_options }}"
    state: quadlet
  notify: Restart {{ immich_name }}
  become: true

- name: Flush handlers
  ansible.builtin.meta: flush_handlers
