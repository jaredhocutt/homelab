# Kickstart file for Fedora Server installation
# Generated by Ansible on {{ ansible_date_time.iso8601 }}

# Keyboard
keyboard --vckeymap="us" --xlayouts="us"

# System language
lang en_US.UTF-8

# Network
{% for interface in kickstart_network %}
network  --bootproto="dhcp" --device="{{ interface.device }}" --ipv6="auto" {% if interface.activate %}--activate{% else %}--no-activate{% endif %}

{% endfor %}
network  --hostname="{{ kickstart_hostname }}"

%packages
@^server-product-environment

%end

# Run the Setup Agent on first boot
firstboot --enable

# Partition clearing
clearpart --drives="{{ kickstart_storage_disks | map(attribute='name') | join(',') }}" --all --initlabel

# Disk partitioning
{% for disk in kickstart_storage_disks %}
{% for partition in disk.partitions %}
part {{ partition.mountpoint }} --fstype="{{ partition.filesystem }}" --ondisk="{{ disk.name }}" --size="{{ partition.size }}" {{ partition.options | default('') }}
{% endfor %}

{% endfor -%}

# LVM configuration
{% for volume_group in kickstart_storage_volume_groups %}
volgroup {{ volume_group.name }} --pesize="{{ volume_group.pesize | default('4096') }}" {{ volume_group.physical_volumes | join(' ') }}
{% for logical_volume in volume_group.logical_volumes %}
logvol {{ logical_volume.mountpoint }} --fstype="{{ logical_volume.filesystem }}" {% if logical_volume.percent is defined %}--percent="{{ logical_volume.percent }}"{% elif logical_volume.size is defined %}--size="{{ logical_volume.size }}"{% endif %} --name="{{ logical_volume.name }}" --vgname="{{ volume_group.name }}"
{% endfor %}

{% endfor -%}

# System timezone
timezone America/New_York --utc

# Users
rootpw --lock

{% for user in kickstart_users %}
user --name="{{ user.username }}" --groups="{{ user.groups }}" --uid="{{ user.uid }}" --gid="{{ user.gid }}" {% if user.password is defined %}--password="{{ user.password }}" --iscrypted{% else %}--lock{% endif %} --gecos="{{ user.fullname }}"
{% if user.authorized_keys is defined %}
{% for authorized_key in user.authorized_keys %}
sshkey --username="{{ user.username }}" "{{ authorized_key }}"
{% endfor %}
{% endif %}
{% endfor %}

# Scripts
%post --erroronfail --log=/root/ks-post.log
{% for user in kickstart_users %}
{% if user.sudoers is defined %}
cat > /etc/sudoers.d/{{ user.username }} <<'EOF'
{{ user.sudoers }}
EOF

chown root:root /etc/sudoers.d/{{ user.username }}
chmod 0440 /etc/sudoers.d/{{ user.username }}

# sanity-check the syntax
visudo -cf /etc/sudoers.d/{{ user.username }} || { echo "Bad sudoers file"; exit 1; }
{% endif %}
{% endfor %}
%end
